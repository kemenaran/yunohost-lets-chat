{
  "name": "grunt-bower",
  "description": "Copy bower installed components to dist folder.",
  "version": "0.16.1",
  "homepage": "https://github.com/curist/grunt-bower",
  "author": {
    "name": "curist",
    "email": "curist.cyc@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/curist/grunt-bower.git"
  },
  "bugs": {
    "url": "https://github.com/curist/grunt-bower/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/curist/grunt-bower/blob/master/LICENSE-MIT"
    }
  ],
  "main": "grunt.js",
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "cd ./test/boilerplate && npm install && rm -rf node_modules/grunt-bower && ln -nfs ../../.. node_modules/grunt-bower && node run_test.js"
  },
  "dependencies": {
    "bower": "~1.2.8"
  },
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-clean": "~0.3.1",
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-nodeunit": "~0.1.2"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-bower\n\nCopy bower installed components to dist folder.\n\n## Getting Started\nInstall this grunt plugin next to your project's [Gruntfile.js][getting_started] with: `npm install grunt-bower`\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-bower');\n```\n\n[grunt]: http://gruntjs.com/\n[getting_started]: http://gruntjs.com/getting-started\n\n## Documentation\nTo your [Gruntfile.js][getting_started], add:\n\n```javascript\nbower: {\n  dev: {\n    dest: 'dest/path'\n  }\n}\n```\n\nAdd **stripAffix** option if you'd like to have lib names with its file type affix to be stripped, things like `/\\.js$/`, `/js$/` or `/\\.css$/` etc.:\n\n```javascript\nbower: {\n  dev: {\n    dest: 'dest/path',\n    options: {\n      stripAffix: true\n    }\n  }\n}\n```\n\n`stripAffix` could cause name confliction, use with caution!\nIf you were using `grunt-bower` prior to v0.9.0, `stripJsAffix` is now an alias to `stripAffix` option.\n\nIf you want to assign different destination folder for other file types:\n\n```javascript\nbower: {\n  dev: {\n    dest: 'dest/',\n    js_dest: 'dest/js',\n    css_dest: 'dest/styles'\n  }\n}\n```\n\nFile types without a `[file_type]_dest` will go to `dest` folder.\n\n**Note**: `fonts_dest` is a special case, `svg`, `eot`, `ttf`, `woff`, `otf`, are all covered by `fonts_dest` for convenience.\n\nIf you want to have more specific `dest` options for certain packages:\n\n```javascript\nbower: {\n  dev: {\n    dest: 'public/',\n    css_dest: 'public/styles',\n    options: {\n      packageSpecific: {\n        bootstrap: {\n          dest: 'public/fonts',\n          css_dest: 'public/css/bootstrap'\n        }\n      }\n    }\n  }\n}\n```\n\nIf `grunt-bower` not copying the files you want:\n\n```javascript\nbower: {\n  dev: {\n    dest: 'public/',\n    options: {\n      packageSpecific: {\n        'typeahead.js': {\n          files: [\n            \"dist/typeahead.bundle.js\"\n          ]\n        }\n      }\n    }\n  }\n}\n```\n\nYou can ignore some packages if you don't want them to be copied:\n\n```javascript\nbower: {\n  dev: {\n    dest: 'public/',\n    options: {\n      ignorePackages: ['jquery']\n    }\n  }\n}\n```\n\nIf you want the exported files to be organized by package, use `expand` option. For example, such config will result in the file structure like this:\n\n```javascript\nbower: {\n  dev: {\n    dest: 'public/vendor/',\n    options: {\n      expand: true\n    }\n  }\n}\n```\n```\n/public\n  /vendor\n    /package1\n      package1_file1.js\n      package1_file2.js\n      package1.css\n    /package2\n      package2.js\n      package2.css\n```\n\nOr organized by file type in addition:\n\n```javascript\nbower: {\n  dev: {\n    dest: 'public/',\n    js_dest: 'public/js/'\n    css_dest: 'public/css/',\n    fonts_dest: 'public/fonts/', //covers font types ['svg','eot', 'ttf', 'woff', 'otf']\n    options: {\n      expand: true\n    }\n  }\n}\n```\n```\n/public\n  /js\n    /package1\n      package1_file1.js\n      package1_file2.js\n    /package2\n      package2.js\n  /css\n    /package1\n      package1.css\n    /package2\n      package2.css\n```\n\nFor file path expansion (globbing):\n```javascript\nbower: {\n  dev: {\n    options: {\n      packageSpecific: {\n        'jquery-ui': {\n          keepExpandedHierarchy: true,\n          stripGlobBase: true,\n          files: [\n            'ui/minified/jquery-ui.min.js',\n            'themes/base/minified/**'\n          ]\n        }\n      }\n    }\n  }\n}\n```\n\n`keepExpandedHierarchy` default to true (for all dependencies), you have to explicitly set it to `false` if you want a flattened output structure.  \nSet `stripGlobBase` to true if you only want to keep the expanded part in the globbing pattern. If you want flattening for all packages do:\n\n```javascript\nbower: {\n  dev: {\n    options: {\n      keepExpandedHierarchy: false\n    }\n  }\n}\n```\n\n## Change Logs\n[Check here.](https://github.com/curist/grunt-bower/blob/master/CHANGELOG.md)\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][grunt].\n\n\n## License\nCopyright (c) 2012 curist\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-bower@0.16.1",
  "dist": {
    "shasum": "73cec370c5919d4b6a5e2b4244a5e378c5fdf937"
  },
  "_from": "grunt-bower@~0.16.0",
  "_resolved": "https://registry.npmjs.org/grunt-bower/-/grunt-bower-0.16.1.tgz"
}
